{"ast":null,"code":"var _jsxFileName = \"/Users/kellerjohnson/Desktop/techstarsProject/src/components/CompanyCard.jsx\",\n    _s = $RefreshSig$();\n\nimport '../App.css';\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { Button } from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CompanyCard = () => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [state, setState] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [foundedDate, setFoundedDate] = useState(\"\");\n  const [companyList, setCompanyList] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newState, setNewState] = useState(\"\");\n  const [newCity, setNewCity] = useState(\"\");\n  const [newDescription, setNewDescription] = useState(\"\");\n  const [newFoundedDate, setNewFoundedDate] = useState(\"\");\n  const [showForm, setShowForm] = useState(false);\n  const [open, setOpen] = useState(0);\n  const [editMode, setEditMode] = useState(0);\n  const [addFounderMode, setAddFounderMode] = useState(0);\n  const [newFounder, setNewFounder] = useState(\"\");\n  const [founderPosition, setFounderPosition] = useState(\"\");\n\n  const handleClickOpen = value => {\n    setOpen(value);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const openEditMode = value => {\n    setEditMode(value);\n    let editingItem = companyList.find(company => {\n      return company.id === value;\n    });\n    setNewName(editingItem.name);\n    setNewState(editingItem.state);\n    setNewCity(editingItem.city);\n    setNewFoundedDate(editingItem.foundedDate);\n    setNewDescription(editingItem.description);\n    setNewFounder(editingItem.newFounder);\n    setFounderPosition(editingItem.founderPosition);\n  };\n\n  const closeEditMode = value => {\n    setEditMode(0);\n    setName(\"\");\n  };\n\n  const openFounderTextField = value => {\n    setAddFounderMode(value);\n  };\n\n  const closeFounderTextField = () => {\n    setAddFounderMode(0);\n    setNewFounder(\"\");\n    setFounderPosition(\"\");\n  };\n\n  const addCompany = () => {\n    const defaultState = \"\";\n    setShowForm(true);\n    axios.post('http://localhost:3001/create', {\n      name: name,\n      state: state,\n      city: city,\n      foundedDate: foundedDate,\n      description: description,\n      newFounder: \"\",\n      founderPosition: \"\"\n    }).then(result => {\n      setCompanyList([...companyList, {\n        name: name,\n        state: state,\n        city: city,\n        foundedDate: foundedDate,\n        description: description\n      }]);\n      setName(defaultState);\n      setState(defaultState);\n      setCity(defaultState);\n      setDescription(defaultState);\n      setFoundedDate(defaultState);\n    });\n  };\n\n  const addFounder = id => {\n    axios.put(`http://localhost:3001/addFounder`, {\n      newFounder: newFounder,\n      founderPosition: founderPosition,\n      id: id\n    }).then(response => {\n      setCompanyList(companyList.map(val => {\n        return val.id === id ? {\n          id: val.id,\n          name: newName ? newName : val.name,\n          state: newState ? newState : val.state,\n          city: newCity ? newCity : val.city,\n          foundedDate: newFoundedDate ? newFoundedDate : val.foundedDate,\n          description: newDescription ? newDescription : val.description,\n          newFounder: newFounder ? newFounder : val.newFounder,\n          founderPosition: founderPosition ? founderPosition : val.founderPosition\n        } : val;\n      }));\n    });\n    setAddFounderMode(0);\n    setOpen(false);\n  };\n\n  const getCompanies = () => {\n    return axios.get('http://localhost:3001/companies').then(response => {\n      console.log('RESPONSE', response.data);\n      setCompanyList(response.data);\n    });\n  };\n\n  const updateCompany = id => {\n    // Try and make it so you can update the whole card with this one function\n    axios.put('http://localhost:3001/update', {\n      name: newName,\n      state: newState,\n      city: newCity,\n      foundedDate: newFoundedDate,\n      description: newDescription,\n      newFounder: newFounder,\n      founderPosition: founderPosition,\n      id: id\n    }).then(response => {\n      setCompanyList(companyList.map(val => {\n        return val.id === id ? {\n          id: val.id,\n          name: newName ? newName : val.name,\n          state: newState ? newState : val.state,\n          city: newCity ? newCity : val.city,\n          foundedDate: newFoundedDate ? newFoundedDate : val.foundedDate,\n          description: newDescription ? newDescription : val.description,\n          newFounder: newFounder ? newFounder : val.newFounder,\n          founderPosition: founderPosition ? founderPosition : val.founderPosition\n        } : val;\n      }));\n      setEditMode(0);\n      setOpen(false);\n      setNewName(\"\");\n      setNewState(\"\");\n      setNewCity(\"\");\n      setNewDescription(\"\");\n      setNewFoundedDate(\"\");\n    });\n  };\n\n  const deleteCompany = id => {\n    axios.delete(`http://localhost:3001/delete/${id}`).then(response => {\n      setCompanyList(companyList.filter(val => {\n        return val.id !== id;\n      }));\n    });\n  };\n\n  const renderCompanies = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"companies\",\n        \"data-testid\": \"companies-card-rendered\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          color: \"primary\",\n          onClick: getCompanies,\n          inputprops: {\n            \"data-testid\": \"get-companies-button\"\n          },\n          \"data-test\": \"get-companies-button\",\n          children: \"Get List of Companies\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this), companyList.map((val, key) => {\n          return /*#__PURE__*/_jsxDEV(Card, {\n            className: \"company\",\n            inputprops: {\n              \"data-testid\": \"companies-card-rendered\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\"Company Name: \", val.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\"City: \", val.city]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\"State: \", val.state]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\"Description: \", val.description]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => handleClickOpen(val.id),\n              children: \"More...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n              open: open === val.id,\n              onClose: () => handleClose(val.id),\n              children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n                className: \"dialog-title\",\n                children: val.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n                children: [editMode ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"dialog-content\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"founding-date-location\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"founded-date\",\n                      children: val.foundedDate\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 203,\n                      columnNumber: 49\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"location\",\n                      children: [\" \", val.city, \", \", val.state]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 203,\n                      columnNumber: 103\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 202,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"description\",\n                    children: val.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 205,\n                    columnNumber: 45\n                  }, this), val.newFounder === \"\" ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"founder-container\",\n                    children: [\"Founder\", /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"founders-section\",\n                      children: [val.newFounder, \"\\xA0\\xA0\\xA0|\\xA0\\xA0\\xA0\", val.founderPosition]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 212,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 211,\n                    columnNumber: 49\n                  }, this), addFounderMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(TextField, {\n                      variant: \"outlined\",\n                      label: \"Founder\",\n                      onChange: event => {\n                        setNewFounder(event.target.value);\n                      },\n                      children: \"Founder\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 220,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                      variant: \"outlined\",\n                      label: \"Position\",\n                      onChange: event => {\n                        setFounderPosition(event.target.value);\n                      },\n                      children: \"Position\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 223,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"outlined\",\n                      color: \"primary\",\n                      size: \"medium\",\n                      onClick: () => addFounder(val.id),\n                      children: \"Save\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 226,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"outlined\",\n                      color: \"primary\",\n                      size: \"medium\",\n                      onClick: () => closeFounderTextField(),\n                      children: \"Cancel\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 227,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 219,\n                    columnNumber: 49\n                  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"outlined\",\n                      color: \"primary\",\n                      size: \"medium\",\n                      onClick: () => openFounderTextField(val.id),\n                      children: \"Add Founder\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 231,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 230,\n                    columnNumber: 50\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"edit-delete-buttons\",\n                    children: [/*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"outlined\",\n                      color: \"primary\",\n                      size: \"small\",\n                      onClick: () => openEditMode(val.id),\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 236,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"contained\",\n                      color: \"secondary\",\n                      size: \"small\",\n                      onClick: () => deleteCompany(val.id),\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 237,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 60\n                }, this), editMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"dialog-content\",\n                  children: [/*#__PURE__*/_jsxDEV(TextField, {\n                    className: \"title\",\n                    variant: \"outlined\",\n                    label: \"Company Name\",\n                    defaultValue: val.name,\n                    onChange: event => {\n                      setNewName(event.target.value ? event.target.value : val.name);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 244,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"founding-date-location\",\n                    children: [/*#__PURE__*/_jsxDEV(TextField, {\n                      className: \"founded-date\",\n                      variant: \"outlined\",\n                      label: \"Founded Date\",\n                      defaultValue: val.foundedDate,\n                      onChange: event => {\n                        setNewFoundedDate(event.target.value ? event.target.value : val.foundedDate);\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 248,\n                      columnNumber: 49\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(TextField, {\n                      className: \"location\",\n                      variant: \"outlined\",\n                      label: \"State\",\n                      defaultValue: val.state,\n                      onChange: event => {\n                        setNewState(event.target.value ? event.target.value : val.state);\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 250,\n                      columnNumber: 55\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(TextField, {\n                      className: \"location\",\n                      variant: \"outlined\",\n                      label: \"City\",\n                      defaultValue: val.city,\n                      onChange: event => {\n                        setNewCity(event.target.value ? event.target.value : val.city);\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 252,\n                      columnNumber: 55\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 247,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                    className: \"description\",\n                    variant: \"outlined\",\n                    label: \"Description\",\n                    defaultValue: val.description,\n                    fullWidth: true,\n                    onChange: event => {\n                      setNewDescription(event.target.value ? event.target.value : val.description);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 256,\n                    columnNumber: 45\n                  }, this), val.newFounder === \"\" ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"founder-founder-position\",\n                    children: [/*#__PURE__*/_jsxDEV(TextField, {\n                      variant: \"outlined\",\n                      label: \"Founder\",\n                      defaultValue: val.newFounder,\n                      onChange: event => {\n                        setNewFounder(event.target.value ? event.target.value : val.newFounder);\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 261,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                      variant: \"outlined\",\n                      label: \"Position\",\n                      defaultValue: val.founderPosition,\n                      onChange: event => {\n                        setFounderPosition(event.target.value ? event.target.value : val.founderPosition);\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 264,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 51\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"save-cancel-button\",\n                    children: [/*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"outlined\",\n                      color: \"primary\",\n                      size: \"small\",\n                      onClick: () => updateCompany(val.id),\n                      children: \"Save\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 271,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"contained\",\n                      color: \"secondary\",\n                      size: \"small\",\n                      onClick: () => closeEditMode(val.id),\n                      children: \"Cancel\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 272,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 270,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 54\n                }, this) : null]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 29\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this), showForm ? null : /*#__PURE__*/_jsxDEV(Card, {\n        className: \"new-company-container\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"form\",\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Company Name\",\n            variant: \"outlined\",\n            fullWidth: true,\n            required: true,\n            onChange: event => {\n              setName(event.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"State\",\n            variant: \"outlined\",\n            required: true,\n            onChange: event => {\n              setState(event.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"City\",\n            variant: \"outlined\",\n            required: true,\n            onChange: event => {\n              setCity(event.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Founded Date\",\n            variant: \"outlined\",\n            onChange: event => {\n              setFoundedDate(event.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Company Description\",\n            variant: \"outlined\",\n            fullWidth: true,\n            required: true,\n            onChange: event => {\n              setDescription(event.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"primary\",\n            onClick: addCompany,\n            children: \"Save Company\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 40\n      }, this), showForm ? /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: () => setShowForm(!showForm),\n        children: \"Add Company\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 32\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: () => setShowForm(!showForm),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"company-card\",\n    children: renderCompanies()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 320,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CompanyCard, \"IZLcBbPYpBlIFloDX4fSgfbk5UM=\");\n\n_c = CompanyCard;\nexport default CompanyCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"CompanyCard\");","map":{"version":3,"sources":["/Users/kellerjohnson/Desktop/techstarsProject/src/components/CompanyCard.jsx"],"names":["React","useState","axios","Button","Card","TextField","Dialog","DialogContent","DialogTitle","CompanyCard","name","setName","state","setState","city","setCity","description","setDescription","foundedDate","setFoundedDate","companyList","setCompanyList","newName","setNewName","newState","setNewState","newCity","setNewCity","newDescription","setNewDescription","newFoundedDate","setNewFoundedDate","showForm","setShowForm","open","setOpen","editMode","setEditMode","addFounderMode","setAddFounderMode","newFounder","setNewFounder","founderPosition","setFounderPosition","handleClickOpen","value","handleClose","openEditMode","editingItem","find","company","id","closeEditMode","openFounderTextField","closeFounderTextField","addCompany","defaultState","post","then","result","addFounder","put","response","map","val","getCompanies","get","console","log","data","updateCompany","deleteCompany","delete","filter","renderCompanies","key","event","target"],"mappings":"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","sourcesContent":["import '../App.css'\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { Button } from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst CompanyCard = () => {\n\n    const [name, setName] = useState(\"\")\n    const [state, setState] = useState(\"\")\n    const [city, setCity] = useState(\"\")\n    const [description, setDescription] = useState(\"\")\n    const [foundedDate, setFoundedDate] = useState(\"\")\n\n    const [companyList, setCompanyList] = useState([])\n    const [newName, setNewName] = useState(\"\")\n    const [newState, setNewState] = useState(\"\")\n    const [newCity, setNewCity] = useState(\"\")\n    const [newDescription, setNewDescription] = useState(\"\")\n    const [newFoundedDate, setNewFoundedDate] = useState(\"\")\n\n    const [showForm, setShowForm] = useState(false)\n    const [open, setOpen] = useState(0)\n    const [editMode, setEditMode] = useState(0)\n    const [addFounderMode, setAddFounderMode] = useState(0)\n    const [newFounder, setNewFounder] = useState(\"\")\n    const [founderPosition, setFounderPosition] = useState(\"\")\n\n\n\n    const handleClickOpen = (value) => {\n        setOpen(value)\n    }\n\n    const handleClose = () => {\n        setOpen(false);\n    }\n\n    const openEditMode = (value) => {\n        setEditMode(value)\n        let editingItem = companyList.find(company => {\n            return company.id === value;\n        })\n\n        setNewName(editingItem.name)\n        setNewState(editingItem.state)\n        setNewCity(editingItem.city)\n        setNewFoundedDate(editingItem.foundedDate)\n        setNewDescription(editingItem.description)\n        setNewFounder(editingItem.newFounder)\n        setFounderPosition(editingItem.founderPosition)\n    }\n\n    const closeEditMode = (value) => {\n        setEditMode(0)\n        setName(\"\")\n    }\n\n    const openFounderTextField = (value) => {\n        setAddFounderMode(value)\n\n    }\n\n    const closeFounderTextField = () => {\n        setAddFounderMode(0)\n        setNewFounder(\"\")\n        setFounderPosition(\"\")\n    }\n\n    const addCompany = () => {\n        const defaultState = \"\";\n        setShowForm(true);\n        axios.post('http://localhost:3001/create', {\n            name: name,\n            state: state,\n            city: city,\n            foundedDate: foundedDate,\n            description: description,\n            newFounder: \"\",\n            founderPosition: \"\"\n        }).then((result) => {\n            setCompanyList([\n                ...companyList,\n                {\n\n                    name: name,\n                    state: state,\n                    city: city,\n                    foundedDate: foundedDate,\n                    description: description\n                },\n            ])\n            setName(defaultState)\n            setState(defaultState)\n            setCity(defaultState)\n            setDescription(defaultState)\n            setFoundedDate(defaultState)\n        })\n    }\n\n    const addFounder = (id) => {\n        axios.put(`http://localhost:3001/addFounder`, { newFounder: newFounder, founderPosition: founderPosition, id: id }).then((response) => {\n            setCompanyList(\n                companyList.map((val) => {\n\n                    return val.id === id\n                        ? {\n                            id: val.id,\n                            name: newName ? newName : val.name,\n                            state: newState ? newState : val.state,\n                            city: newCity ? newCity : val.city,\n                            foundedDate: newFoundedDate ? newFoundedDate : val.foundedDate,\n                            description: newDescription ? newDescription : val.description,\n                            newFounder: newFounder ? newFounder : val.newFounder,\n                            founderPosition: founderPosition ? founderPosition : val.founderPosition\n                        }\n                        : val;\n                })\n            )\n        })\n        setAddFounderMode(0)\n        setOpen(false)\n\n    }\n\n    const getCompanies = () => {\n        return axios.get('http://localhost:3001/companies').then((response) => {\n            console.log('RESPONSE', response.data)\n            setCompanyList(response.data)\n\n        })\n    }\n\n    const updateCompany = (id) => { // Try and make it so you can update the whole card with this one function\n        axios.put('http://localhost:3001/update', { name: newName, state: newState, city: newCity, foundedDate: newFoundedDate, description: newDescription, newFounder: newFounder, founderPosition: founderPosition, id: id }).then((response) => {\n            setCompanyList(\n                companyList.map((val) => {\n                    return val.id === id\n                        ? {\n                            id: val.id,\n                            name: newName ? newName : val.name,\n                            state: newState ? newState : val.state,\n                            city: newCity ? newCity : val.city,\n                            foundedDate: newFoundedDate ? newFoundedDate : val.foundedDate,\n                            description: newDescription ? newDescription : val.description,\n                            newFounder: newFounder ? newFounder : val.newFounder,\n                            founderPosition: founderPosition ? founderPosition : val.founderPosition\n                        }\n                        : val;\n                })\n            )\n            setEditMode(0)\n            setOpen(false)\n            setNewName(\"\")\n            setNewState(\"\")\n            setNewCity(\"\")\n            setNewDescription(\"\")\n            setNewFoundedDate(\"\")\n        })\n    }\n\n    const deleteCompany = (id) => {\n        axios.delete(`http://localhost:3001/delete/${id}`).then((response) => {\n            setCompanyList(\n                companyList.filter((val) => {\n                    return val.id !== id;\n                })\n            )\n        })\n    }\n\n\n    const renderCompanies = () => {\n        return (\n            <div className=\"App\">\n\n                <div className=\"companies\" data-testid=\"companies-card-rendered\">\n                    <Button variant=\"outlined\" color=\"primary\" onClick={getCompanies} inputprops={{ \"data-testid\": \"get-companies-button\" }} data-test=\"get-companies-button\">Get List of Companies</Button>\n                    {companyList.map((val, key) => {\n                        return (\n                            <Card className=\"company\" inputprops={{ \"data-testid\": \"companies-card-rendered\" }}>\n                                <div>\n                                    <h3>Company Name: {val.name}</h3>\n                                    <h3>City: {val.city}</h3>\n                                    <h3>State: {val.state}</h3>\n                                    <h3>Description: {val.description}</h3>\n\n                                </div>\n                                <Button onClick={() => handleClickOpen(val.id)}>More...</Button>\n                                <Dialog\n                                    open={open === val.id}\n                                    onClose={() => handleClose(val.id)}\n                                >\n                                    <DialogTitle className=\"dialog-title\">{val.name}</DialogTitle>\n                                    <DialogContent>\n\n                                        {editMode ? null : <div className=\"dialog-content\">\n                                            <div className=\"founding-date-location\">\n                                                <div className=\"founded-date\">{val.foundedDate}</div> <div className=\"location\"> {val.city}, {val.state}</div>\n                                            </div>\n                                            <div className=\"description\">\n                                                {val.description}\n                                            </div>\n\n                                            {val.newFounder === \"\" ? null\n                                                :\n                                                <div className=\"founder-container\">Founder\n                                                    <div className=\"founders-section\">\n                                                        {val.newFounder}&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;{val.founderPosition}\n                                                    </div>\n                                                </div>\n                                            }\n\n                                            {addFounderMode ? (\n                                                <div>\n                                                    <TextField variant=\"outlined\" label=\"Founder\" onChange={(event) => {\n                                                        setNewFounder(event.target.value)\n                                                    }}>Founder</TextField>\n                                                    <TextField variant=\"outlined\" label=\"Position\" onChange={(event) => {\n                                                        setFounderPosition(event.target.value)\n                                                    }}>Position</TextField>\n                                                    <Button variant='outlined' color=\"primary\" size=\"medium\" onClick={() => (addFounder(val.id))}>Save</Button>\n                                                    <Button variant='outlined' color=\"primary\" size=\"medium\" onClick={() => (closeFounderTextField())}>Cancel</Button>\n                                                </div>)\n                                                :\n                                                (<div>\n                                                    <Button variant='outlined' color=\"primary\" size=\"medium\" onClick={() => (openFounderTextField(val.id))}>Add Founder</Button>\n                                                </div>)\n\n                                            }\n                                            <div className=\"edit-delete-buttons\">\n                                                <Button variant=\"outlined\" color=\"primary\" size=\"small\" onClick={() => (openEditMode(val.id))}>Edit</Button>\n                                                <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={() => (deleteCompany(val.id))}>Delete</Button>\n                                            </div>\n\n\n                                        </div>}\n\n                                        {editMode ? (<div className=\"dialog-content\">\n                                            <TextField className=\"title\" variant=\"outlined\" label=\"Company Name\" defaultValue={val.name} onChange={(event) => {\n                                                setNewName(event.target.value ? event.target.value : val.name)\n                                            }} />\n                                            <div className=\"founding-date-location\">\n                                                <TextField className=\"founded-date\" variant=\"outlined\" label=\"Founded Date\" defaultValue={val.foundedDate} onChange={(event) => {\n                                                    setNewFoundedDate(event.target.value ? event.target.value : val.foundedDate)\n                                                }} /> <TextField className=\"location\" variant=\"outlined\" label=\"State\" defaultValue={val.state} onChange={(event) => {\n                                                    setNewState(event.target.value ? event.target.value : val.state)\n                                                }} /> <TextField className=\"location\" variant=\"outlined\" label=\"City\" defaultValue={val.city} onChange={(event) => {\n                                                    setNewCity(event.target.value ? event.target.value : val.city)\n                                                }} />\n                                            </div>\n                                            <TextField className=\"description\" variant=\"outlined\" label=\"Description\" defaultValue={val.description} fullWidth onChange={(event) => {\n                                                setNewDescription(event.target.value ? event.target.value : val.description)\n                                            }} />\n                                            {val.newFounder === \"\" ? null\n                                                : <div className=\"founder-founder-position\">\n                                                    <TextField variant=\"outlined\" label=\"Founder\" defaultValue={val.newFounder} onChange={(event) => {\n                                                        setNewFounder(event.target.value ? event.target.value : val.newFounder)\n                                                    }} />\n                                                    <TextField variant=\"outlined\" label=\"Position\" defaultValue={val.founderPosition} onChange={(event) => {\n                                                        setFounderPosition(event.target.value ? event.target.value : val.founderPosition)\n                                                    }} />\n                                                </div>\n                                            }\n\n                                            <div className=\"save-cancel-button\">\n                                                <Button variant=\"outlined\" color=\"primary\" size=\"small\" onClick={() => (updateCompany(val.id))}>Save</Button>\n                                                <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={() => (closeEditMode(val.id))}>Cancel</Button>\n                                            </div>\n                                        </div>\n\n                                        ) : null}\n\n                                    </DialogContent>\n                                </Dialog>\n\n                            </Card>\n\n                        )\n                    })}\n                </div>\n                {\n                    showForm ? null : (<Card className=\"new-company-container\">\n                        <form className=\"form\">\n                            <TextField label=\"Company Name\" variant=\"outlined\" fullWidth required onChange={(event) => {\n                                setName(event.target.value);\n                            }} />\n                            <TextField label=\"State\" variant=\"outlined\" required onChange={(event) => {\n                                setState(event.target.value);\n                            }} />\n                            <TextField label=\"City\" variant=\"outlined\" required onChange={(event) => {\n                                setCity(event.target.value);\n                            }} />\n                            <TextField label=\"Founded Date\" variant=\"outlined\" onChange={(event) => {\n                                setFoundedDate(event.target.value);\n                            }} />\n                            <TextField label=\"Company Description\" variant=\"outlined\" fullWidth required onChange={(event) => {\n                                setDescription(event.target.value);\n                            }} />\n\n                            <Button variant=\"outlined\" color=\"primary\" onClick={addCompany}>Save Company</Button>\n                        </form>\n                    </Card>)\n                }\n                {\n                    showForm ? <Button variant=\"contained\" color=\"primary\" onClick={() => setShowForm(!showForm)}>Add Company</Button>\n                        :\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => setShowForm(!showForm)}>Cancel</Button>\n                }\n\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"company-card\">\n            {renderCompanies()}\n        </div>\n    )\n}\n\nexport default CompanyCard;"]},"metadata":{},"sourceType":"module"}